ID=""
ISSUER_ID=""
ISSUER_CERTIFICATE_PEM_FILE_PATH=""
ISSUER_CRL_FILE_PATH=""
ISSUER_CRL_NUMBER_FILE_PATH=""
ISSUER_DATABASE_FILE_PATH=""
ISSUER_PRIVATE_KEY_FILE_PATH=""
ISSUER_RANDOM_SEED_FILE_PATH=""
ISSUER_SERIAL_NUMBER_FILE_PATH=""

###############################################################################
# Sections for creating root and intermediate certificate authorities
[ca]
default_ca = ca_default

[ca_default]
new_certs_dir    = ${ENV::NEW_CERTS_DIRECTORY_PATH}
database         = ${ENV::ISSUER_DATABASE_FILE_PATH} 
certificate      = ${ENV::ISSUER_CERTIFICATE_PEM_FILE_PATH}
private_key      = ${ENV::ISSUER_PRIVATE_KEY_FILE_PATH}
serial           = ${ENV::ISSUER_SERIAL_NUMBER_FILE_PATH}
RANDFILE         = ${ENV::ISSUER_RANDOM_SEED_FILE_PATH}
crlnumber        = ${ENV::ISSUER_CRL_NUMBER_FILE_PATH}
crl              = ${ENV::ISSUER_CRL_FILE_PATH}
copy_extensions	 = copy
policy           = policy_default
name_opt         = ca_default
cert_opt         = ca_default
crl_extensions   = crl_ext
default_days     = 3650
default_crl_days = 30
default_md       = sha256
preserve         = no

[policy_default]
countryName             = match
stateOrProvinceName     = match
localityName            = match
organizationName        = match
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

###############################################################################
# Certificate signing request (CSR) configuration
[req]
distinguished_name  = req_distinguished_name
prompt              = no
string_mask         = utf8only

[x509v3_code_signing]
keyUsage            = digitalSignature
extendedKeyUsage    = codeSigning

[x509v3_not_code_signing]
keyUsage            = digitalSignature,keyEncipherment,nonRepudiation
extendedKeyUsage    = clientAuth,emailProtection

###############################################################################
# CSR distinguished name info
[req_distinguished_name]
countryName               = US
stateOrProvinceName       = WA
localityName              = Redmond
0.organizationName        = Test Organization Name
organizationalUnitName    = Test Organizational Unit Name
commonName                = ${ENV::COMMON_NAME}

###############################################################################
# CRL extensions
[crl_ext]
authorityKeyIdentifier = keyid:always

###############################################################################
# Certificate templates
[root_ca_certificate]
basicConstraints       = critical,CA:true
keyUsage               = critical,keyCertSign,cRLSign
subjectKeyIdentifier   = hash

[intermediate_ca_certificate]
authorityInfoAccess    = caIssuers;URI.0:${ENV::CA_BASE_URL}${ENV::ISSUER_ID}.crt
authorityKeyIdentifier = keyid:always,issuer:always
basicConstraints       = critical,CA:true
crlDistributionPoints  = URI:${ENV::CA_BASE_URL}${ENV::ISSUER_ID}.crl
keyUsage               = critical,keyCertSign,cRLSign
subjectKeyIdentifier   = hash

[leaf_certificate]
authorityInfoAccess    = caIssuers;URI.0:${ENV::CA_BASE_URL}${ENV::ISSUER_ID}.crt
authorityKeyIdentifier = keyid:always,issuer:always
basicConstraints       = CA:false
crlDistributionPoints  = URI:${ENV::CA_BASE_URL}${ENV::ISSUER_ID}.crl
subjectKeyIdentifier   = hash

[leaf_no_crl_certificate]
authorityInfoAccess    = caIssuers;URI.0:${ENV::CA_BASE_URL}${ENV::ISSUER_ID}.crt
authorityKeyIdentifier = keyid:always,issuer:always
basicConstraints       = CA:false
subjectKeyIdentifier   = hash

[leaf_broken_crl_certificate]
authorityInfoAccess    = caIssuers;URI.0:${ENV::CA_BASE_URL}${ENV::ISSUER_ID}.crt
authorityKeyIdentifier = keyid:always,issuer:always
basicConstraints       = CA:false
crlDistributionPoints  = URI:${ENV::CA_BASE_URL}invalid-crl-location.crl
subjectKeyIdentifier   = hash

[leaf_using_ocsp_certificate]
authorityInfoAccess    = @leaf_ocsp_aia
authorityKeyIdentifier = keyid:always,issuer:always
basicConstraints       = CA:false
subjectKeyIdentifier   = hash

[leaf_ocsp_aia]
caIssuers;URI.0        = ${ENV::CA_BASE_URL}${ENV::ISSUER_ID}.crt
OCSP;URI.1             = http://localhost:${ENV::OCSP_PORT}

[intermediate_ocsp_certificate]
basicConstraints       = CA:false
keyUsage               = nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage       = OCSPSigning
